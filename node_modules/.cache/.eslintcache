[{"/Users/bylsma/calvinhacks-2025/src/index.js":"1","/Users/bylsma/calvinhacks-2025/src/reportWebVitals.js":"2","/Users/bylsma/calvinhacks-2025/src/App.js":"3","/Users/bylsma/calvinhacks-2025/src/pages/signin.js":"4","/Users/bylsma/calvinhacks-2025/src/pages/signup.js":"5","/Users/bylsma/calvinhacks-2025/src/pages/firebase.js":"6","/Users/bylsma/calvinhacks-2025/src/pages/resume.js":"7","/Users/bylsma/calvinhacks-2025/src/pages/index.js":"8","/Users/bylsma/calvinhacks-2025/src/components/HeroSection/index.js":"9","/Users/bylsma/calvinhacks-2025/src/components/FaqSection/index.js":"10","/Users/bylsma/calvinhacks-2025/src/components/Footer/index.js":"11","/Users/bylsma/calvinhacks-2025/src/components/SponsorSection/index.js":"12","/Users/bylsma/calvinhacks-2025/src/components/AboutSection/index.js":"13","/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/index.js":"14","/Users/bylsma/calvinhacks-2025/src/components/Navbar/index.js":"15","/Users/bylsma/calvinhacks-2025/src/components/Sidebar/index.js":"16","/Users/bylsma/calvinhacks-2025/src/components/HeroSection/HeroElement.js":"17","/Users/bylsma/calvinhacks-2025/src/components/ButtonElement.js":"18","/Users/bylsma/calvinhacks-2025/src/components/FaqSection/Data.js":"19","/Users/bylsma/calvinhacks-2025/src/components/Footer/FooterElement.js":"20","/Users/bylsma/calvinhacks-2025/src/components/FaqSection/FaqElement.js":"21","/Users/bylsma/calvinhacks-2025/src/components/SponsorSection/SponsorElement.js":"22","/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/ScheduleElement.js":"23","/Users/bylsma/calvinhacks-2025/src/components/AboutSection/AboutElement.js":"24","/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/secondDayData.js":"25","/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/firstDayData.js":"26","/Users/bylsma/calvinhacks-2025/src/components/Navbar/NavbarElement.js":"27","/Users/bylsma/calvinhacks-2025/src/components/Sidebar/SidebarElement.js":"28"},{"size":500,"mtime":1738813423386,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1738813423385,"results":"31","hashOfConfig":"30"},{"size":1339,"mtime":1739374590160,"results":"32","hashOfConfig":"30"},{"size":4464,"mtime":1738813423419,"results":"33","hashOfConfig":"30"},{"size":18856,"mtime":1739981095557,"results":"34","hashOfConfig":"30"},{"size":736,"mtime":1738813423420,"results":"35","hashOfConfig":"30"},{"size":3759,"mtime":1738813423419,"results":"36","hashOfConfig":"30"},{"size":986,"mtime":1738813423419,"results":"37","hashOfConfig":"30"},{"size":2192,"mtime":1740683517758,"results":"38","hashOfConfig":"30"},{"size":2068,"mtime":1738813423414,"results":"39","hashOfConfig":"30"},{"size":1808,"mtime":1738813423412,"results":"40","hashOfConfig":"30"},{"size":1724,"mtime":1738813423413,"results":"41","hashOfConfig":"30"},{"size":4134,"mtime":1739374340361,"results":"42","hashOfConfig":"30"},{"size":3890,"mtime":1739406727778,"results":"43","hashOfConfig":"30"},{"size":3207,"mtime":1738813423411,"results":"44","hashOfConfig":"30"},{"size":1562,"mtime":1738813423411,"results":"45","hashOfConfig":"30"},{"size":2900,"mtime":1738813423414,"results":"46","hashOfConfig":"30"},{"size":3062,"mtime":1739402279928,"results":"47","hashOfConfig":"30"},{"size":4178,"mtime":1738813423415,"results":"48","hashOfConfig":"30"},{"size":975,"mtime":1738813423412,"results":"49","hashOfConfig":"30"},{"size":2293,"mtime":1738813423415,"results":"50","hashOfConfig":"30"},{"size":1821,"mtime":1738813423413,"results":"51","hashOfConfig":"30"},{"size":1773,"mtime":1738813423417,"results":"52","hashOfConfig":"30"},{"size":4573,"mtime":1738813423416,"results":"53","hashOfConfig":"30"},{"size":2761,"mtime":1738813423417,"results":"54","hashOfConfig":"30"},{"size":1461,"mtime":1738813423418,"results":"55","hashOfConfig":"30"},{"size":3274,"mtime":1738813423411,"results":"56","hashOfConfig":"30"},{"size":2803,"mtime":1738813423410,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q7pdkk",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":4,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bylsma/calvinhacks-2025/src/index.js",[],"/Users/bylsma/calvinhacks-2025/src/reportWebVitals.js",[],"/Users/bylsma/calvinhacks-2025/src/App.js",[],"/Users/bylsma/calvinhacks-2025/src/pages/signin.js",["122","123"],"import React from 'react'\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut, getAuth } from \"firebase/auth\";\nimport { auth } from './firebase';\nimport { Link as LinkR } from 'react-router-dom';\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\n\nconst BackButton = styled(LinkR)`\n    display:inline-block;\n    position: absolute;\n    border-radius: 50%;\n    border: 5px solid #8C2131;\n    margin: 30px 0 0 30px;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n\n    svg {\n        display: flex;\n        margin: 5px auto 0 auto;\n    }\n\n    &:hover {\n        border: 5px solid #F3CD00;\n    }\n`\n\nconst SignInContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100vh;\n\n    label {\n        font-size: 20px;\n        font-weight: 700;\n        margin-bottom: 5px;\n    }\n\n    input {\n        width: 350px;\n        height: 30px;\n        margin-bottom: 20px;\n        /* border-top-style: none;\n        border-right-style: none;\n        border-left-style: none;\n        border-bottom-style: groove; */\n    }\n`\n\nconst ButtonsContainer = styled.div`\n    display:flex;\n    justify-content: space-between;\n    margin: auto auto;\n    max-width: 350px;\n    width: 350px;\n`\n\nconst FormContainer = styled.div`\n    display: flex;\n    width: 350px;\n    flex-direction: column;\n    margin: auto auto;\n`\n\nconst IdContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst PasswordContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst ButtonContainer = styled.div`\n    justify-content: space-evenly;\n    display: flex;\n\n    button {\n        margin: 0 0;\n        align-items: center;\n        width: 150px;\n        height: 50px;\n        background: #8C2131;\n        border-style: none;\n        border-radius: 15px;\n        color: #fff;\n        cursor: pointer;\n        font-size: 15px;\n        text-transform: uppercase;\n\n        &:hover {\n            transition: all 0.2s ease-in-out;\n            background: #F3CD00;\n        }\n    }\n\n    @media screen and (max-width: 1000px) {\n        button {\n            width: 150px;\n        }\n    }\n`\n\nconst SigninPage = () => {\n    const [loginEmail, setloginEmail] = useState(\"\");\n    const [loginPassword, setloginPassword] = useState(\"\");\n    const [user, setUser] = useState({});\n\n    const login = async () => {\n        try {\n            const user = await signInWithEmailAndPassword(\n                auth,\n                loginEmail,\n                loginPassword\n            )\n\n            console.log(\"success\");\n        }\n        catch (error) {\n            console.log(error.message);\n        }\n    };\n\n    const logout = async () => {\n        await signOut(auth);\n    }\n\n    // to get the User, callback function on currentUser, and setUser\n    onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n    })\n\n    return (\n        <SignInContainer>\n            <BackButton to=\"/\">\n                <MdOutlineArrowBackIos size='40' color='#8C2131' />\n            </BackButton>\n            <FormContainer>\n                <IdContainer>\n                    <label>ID</label>\n                    <input\n                        placeholder='Log-in ID'\n                        onChange={(event) => {\n                            setloginEmail(event.target.value);\n                        }}\n                    />\n                </IdContainer>\n                <PasswordContainer>\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        placeholder='Password'\n                        onChange={(event) => {\n                            setloginPassword(event.target.value);\n                        }}\n                    />\n                </PasswordContainer>\n                <ButtonsContainer>\n                    <ButtonContainer>\n                        <button onClick={login} >\n                            login\n                        </button>\n                    </ButtonContainer>\n                    <ButtonContainer>\n                        <button onClick={logout}>\n                            log out\n                        </button>\n                    </ButtonContainer>\n                </ButtonsContainer>\n                <h1>Current User</h1>\n                {user?.email}\n            </FormContainer>\n        </SignInContainer>\n    )\n}\n\nexport default SigninPage;\n","/Users/bylsma/calvinhacks-2025/src/pages/signup.js",["124","125","126","127","128","129","130","131","132","133","134"],"import picture from \"../image/computer.png\"\nimport { db, storage } from \"./firebase\";\n\nimport Modal from 'react-modal';\nimport React, { useState } from 'react';\nimport { addDoc } from '@firebase/firestore';\nimport { collection, getDocs, getFirestore, where, query } from \"firebase/firestore\";\nimport { MdOutlineArrowBackIos } from \"react-icons/md\"\nimport { Link as LinkR } from 'react-router-dom'\nimport { connectStorageEmulator, getDownloadURL, getStorage, ref, uploadBytes, uploadBytesResumable } from 'firebase/storage';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styled from \"styled-components\";\n\nconst BackButton = styled(LinkR)`\n    display:inline-block;\n    border-radius: 50%;\n    border: 5px solid white;\n    margin: 30px 0 0 30px;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n\n    svg {\n        display: flex;\n        margin: 5px auto 0 auto;\n    }\n\n    &:hover {\n        border: 5px solid #F3CD00;\n\n    }\n\n    @media screen and (max-width: 615px) {\n        visibility: visible;\n    }\n\n    @media screen and (max-width: 800px) {\n        width: 50px;\n        height: 50px;\n        margin: 20px 20px 0 20px;\n    }\n`\n\nconst LeftContainer = styled.div`\n    background: #8C2131;\n    height: auto;\n    width: 80%;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (max-width: 615px) {\n        width: 50%;\n    }\n`\n\nconst ResumeContainer = styled.div`\n    display:flex;\n    flex-direction: column;\n    width: 80%;\n    max-width: 100%;\n    height: auto;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: #fff;\n\n    /* width: 100%; */\n    p {\n        font-size: 15px;\n    }\n\n    input {\n        margin-bottom: 20px;\n    }\n\n    @media screen and (max-width: 615px) {\n        p {\n        font-size: 13px;\n        margin: 0 0 5px 0;\n        }\n    }\n`\n\nconst RightContainer = styled.div`\n    width: 100%;\n    height: auto;\n\n`\n\nconst InfoContainer = styled.div`\n    display:flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    height: auto;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    margin-left: 50px;\n    margin-bottom: 50px;\n\n    @media screen and (max-width: 800px) {\n        width: 200px;\n        margin-left: 20px;\n    }\n`\n\nconst SignUpContainer = styled.div`\n    display: flex;\n    width: 90%;\n    height: auto;\n\n    label {\n        font-size: 15px;\n        font-weight: 700;\n        margin-bottom: 5px;\n    }\n\n    input {\n        width: 200px;\n        height: 30px;\n        margin-bottom: 10px;\n    }\n\n    h1 {\n        font-size: 30px;\n    }\n\n    @media screen and (max-width: 615px) {\n        input {\n            width: 150px;\n            height: 30px;\n            margin-bottom: 10px;\n        }\n    }\n`\n\nconst FormContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    -webkit-appearance: none;\n\n    p {\n        font-size: 14px;\n    }\n`\n\nconst CodeContainer = styled.div`\n    display: flex;\n    flex-direction:column ;\n    width: 80%;\n\n    p {\n        font-size: 13px;\n    }\n\n    input {\n        width: 100px ;\n    }\n\n`\n\nconst ButtonContainer = styled.div`\n    margin: auto auto;\n    justify-content: center;\n    align-items: center;\n\n    button {\n        margin: 30px auto auto auto;\n        justify-content: center;\n        align-items: center;\n        width: 200px;\n        height: 50px;\n        background: #8C2131;\n        border-style: none;\n        border-radius: 15px;\n        color: #fff;\n        cursor: pointer;\n        font-size: 15px;\n        text-transform: uppercase;\n\n        &:hover {\n            transition: all 0.2s ease-in-out;\n            background: #F3CD00;\n        }\n    }\n\n    @media screen and (max-width: 800px) {\n        button {\n            margin: 10px;\n            width: 150px;\n        }\n    }\n`\n\nconst SignupPage = () => {\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [progress, setProgress] = useState(0);\n    const [resume, setResume] = useState({});\n    const [show, setShow] = useState(false);\n    const [state, setState] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        major: \"\",\n        allergy: \"\",\n        shirtSize: \"\",\n        age: \"\",\n        school: \"\",\n        phone: \"\",\n        level: \"\",\n        conduct: false,\n        logistics: false,\n        communication: false,\n    })\n\n    const { firstName, lastName, email, major, allergy, shirtSize, age, school, phone, level, conduct, logistics, communication } = state;\n\n    const createUser = async () => {\n        const db = getFirestore();\n\n        // Past years participants\n        // query(collectionReference, condition)\n        // Goes through studentpatients collection and find a patient assigned to a specific user\n        /* const users = query(collection(db, \"users\"), where(\"email\", \"==\", email));\n        const users_querySnapshot = await getDocs(users); */\n\n        // Current year participants\n        const current = query(collection(db, \"2025\"), where(\"email\", \"==\", email));\n        const current_querySnapshot = await getDocs(current);\n\n        /* if (users_querySnapshot.empty) {\n            alert(\"Thank you for signing up for CalvinHacks 2024!\");\n\n            // Add to users collection\n            addDoc(collection(db, \"users\"),\n                {\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    major: major,\n                    allergy: allergy,\n                    shirtSize: shirtSize,\n                    age: age,\n                    school: school,\n                    phone: phone,\n                    level: level,\n                    conduct: true,\n                    logistics: true,\n                    communication: true,\n                })\n        }\n        else {\n            alert(\"E-mail you have entered is already registered.\")\n        } */\n\n        if (current_querySnapshot.empty) {\n            // Add participant information to current year collection\n            addDoc(collection(db, \"2025\"), {\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                major: major,\n                allergy: allergy,\n                shirtSize: shirtSize,\n                age: age,\n                school: school,\n                phone: phone,\n                level: level,\n                conduct: true,\n                logistics: true,\n                communication: true,\n            })\n\n            alert(\"Thank you for signing up for CalvinHacks 2025!\");\n\n            // toast.success(\"Thank you for signing up for CalvinHacks 2024!\", {\n            //     position: \"top-center\",\n            //     autoClose: 5000,\n            //     hideProgressBar: false,\n            //     closeOnClick: true,\n            //     pauseOnHover: true,\n            //     draggable: true,\n            //     progress: undefined,\n            //     theme: \"colored\",\n            // });\n        }\n        else {\n            alert(\"E-mail you have entered is already registered.\");\n        }\n    }\n\n    async function submit(e) {\n        // console.log(this.state);\n        e.preventDefault();\n        createUser();\n\n        setState({\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            major: \"\",\n            allergy: \"\",\n            shirtSize: \"\",\n            resume: \"\",\n            age: \"\",\n            school: \"\",\n            phone: \"\",\n            level: \"\",\n            conduct: false,\n            logistics: false,\n            communication: false,\n        })\n        handleShow();\n    }\n\n    const handleInput = (e) => {\n        let { name, value } = e.target;\n        setState({ ...state, [name]: value })\n    }\n\n    const resumeHandler = (e) => {\n        e.preventDefault();\n        const file = e.target.files[0]\n        setResume(file);\n        // const file = e.target.files[0];\n        // resumeUpload(file)\n    }\n\n    const resumeUpload = () => {\n        console.log(resume)\n\n        // Add resume to current year storage folder\n        const storageRef = ref(storage, `/resume2025/${resume.name}`);\n        const uploadTask = uploadBytesResumable(storageRef, resume);\n\n        uploadTask.on(\"state_changed\", (snapshot) => {\n            const prog = Math.round(\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            setProgress(prog);\n        },\n            (err) => console.log(err),\n            () => {\n                getDownloadURL(uploadTask.snapshot.ref)\n                    .then(url => console.log(url))\n            }\n        )\n    };\n\n    return (\n        <SignUpContainer>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <button onClick={handleClose}>\n                        Close\n                    </button>\n                </Modal.Footer>\n            </Modal>\n\n            <LeftContainer>\n                <BackButton to=\"/\">\n                    {/* <IconContainer> */}\n                    <MdOutlineArrowBackIos size='40' color='#FFF' />\n                    {/* </IconContainer> */}\n                </BackButton>\n                <ResumeContainer>\n                    <h1><b>Optional:</b></h1>\n                    <p> Upload a resume for sponsors to view! Ensure your resume has a unique identifier. Only Sponsors will be able to view your resumes!</p>\n                    {/* <p>Ensure your resume has a unique identifier.</p> */}\n                    <p>(e.g. fName_lName_resume.pdf)</p>\n                    <input\n                        type=\"file\"\n                        name='resume'\n                        onChange={resumeHandler}\n                    />\n                    <button\n                        onClick={resumeUpload}\n                    >\n                        Submit Resume\n                    </button>\n                    <p>\n                        Uploaded: {progress} %\n                    </p>\n                </ResumeContainer>\n                {/* <img src={picture} alt=\"picture\"/> */}\n            </LeftContainer>\n            <RightContainer>\n                <InfoContainer>\n\n                    <form className=\"form\"\n                        onSubmit={submit}\n                    >\n                        <h1>\n                            Welcome to CalvinHacks!\n                        </h1>\n                        <FormContainer>\n                            <label>First name</label>\n                            <input\n                                type=\"text\"\n                                name=\"firstName\"\n                                placeholder=\"First name\"\n                                onChange={handleInput}\n                                value={firstName}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>Last name</label>\n                            <input\n                                type=\"text\"\n                                name=\"lastName\"\n                                placeholder='Last name'\n                                onChange={handleInput}\n                                value={lastName}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>Age</label>\n                            <input\n                                type=\"number\"\n                                name=\"age\"\n                                placeholder='Enter your age'\n                                onChange={handleInput}\n                                value={age}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>Email </label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                placeholder='Email Address'\n                                onChange={handleInput}\n                                value={email}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>School</label>\n                            <input\n                                type=\"text\"\n                                name=\"school\"\n                                placeholder='Enter your University'\n                                onChange={handleInput}\n                                value={school}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>Phone Number</label>\n                            <input\n                                type=\"text\"\n                                name=\"phone\"\n                                placeholder='Enter your phone number here'\n                                onChange={handleInput}\n                                value={phone}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>Major(s)</label>\n                            <input\n                                type=\"text\"\n                                name=\"major\"\n                                placeholder='Your major(s)'\n                                onChange={handleInput}\n                                value={major}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>Current Level of Study</label>\n                            <input\n                                type=\"text\"\n                                name=\"level\"\n                                placeholder='Freshmen, Sophomore, Junior, Senior'\n                                onChange={handleInput}\n                                value={level}\n                                required\n                            />\n                        </FormContainer>\n\n                        <FormContainer>\n                            <label>Allergy/Dietary Restrictions  </label>\n                            <input\n                                type=\"text\"\n                                name=\"allergy\"\n                                placeholder='Any allergies you have'\n                                onChange={handleInput}\n                                value={allergy}\n                            />\n                        </FormContainer>\n\n                        { <FormContainer>\n                            <label>Shirt Size (Adult Sizes Only)</label>\n                            <input\n                                type=\"text\"\n                                name=\"shirtSize\"\n                                placeholder='Your shirt size (S, M, L, XL, XXL)'\n                                onChange={handleInput}\n                                value={shirtSize}\n                            />\n                        </FormContainer> }\n\n\n                        <CodeContainer>\n                            <p><b>MLH Code of Conduct:</b> \"I have read and agree to the <a href='https://static.mlh.io/docs/mlh-code-of-conduct.pdf' target=\"_blank\">MLH Code of\n                                Conduct</a>.\"</p>\n                            <input\n                                type=\"checkbox\"\n                                name=\"conduct\"\n                                placeholder='Your shirt size (S, M, L, XL, XXL)'\n                                onChange={handleInput}\n                                value={conduct}\n                                required\n                            />\n                        </CodeContainer>\n\n\n                        <CodeContainer>\n                            <p><b>Event Logistics Information: </b> “I authorize you to share my\n                                application/registration information with Major League Hacking for event\n                                administration, ranking, and MLH administration in-line with the <a href='https://mlh.io/privacy' target=\"_blank\">MLH Privacy Policy</a>. I further agree to the terms of both the\n                                <a href='https://github.com/MLH/mlh-policies/tree/master/prize-terms-and-conditions' target=\"_blank\"> MLH Contest\n                                    Terms and Conditions</a> and the <a href='https://mlh.io/privacy' target=\"_blank\">MLH Privacy Policy</a>.”</p>\n                            <input\n                                type=\"checkbox\"\n                                name=\"logistics\"\n                                placeholder='Your shirt size (S, M, L, XL, XXL)'\n                                onChange={handleInput}\n                                value={logistics}\n                                required\n                            />\n                        </CodeContainer>\n\n\n                        <CodeContainer>\n                            <p><b>Communication from MLH: </b> “I authorize MLH to send me pre- and\n                                post-event informational emails, which contain free credit and\n                                opportunities from their partners.\"</p>\n                            <input\n                                type=\"checkbox\"\n                                name=\"communication\"\n                                placeholder='Your shirt size (S, M, L, XL, XXL)'\n                                onChange={handleInput}\n                                value={communication}\n                                required\n                            />\n                        </CodeContainer>\n\n                                            \n                        <ButtonContainer>\n                            <button\n                                type=\"submit\"\n                                onClick={handleShow}\n                            >\n                                Submit\n                            </button>\n                        </ButtonContainer>\n                    </form>\n                </InfoContainer>\n            </RightContainer>\n        </SignUpContainer>\n\n\n    )\n}\n\nexport default SignupPage","/Users/bylsma/calvinhacks-2025/src/pages/firebase.js",[],"/Users/bylsma/calvinhacks-2025/src/pages/resume.js",["135","136","137","138","139","140"],"import { db, storage } from \"./firebase\";\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Link as LinkR } from 'react-router-dom';\nimport { MdOutlineArrowBackIos, MdSettingsInputAntenna } from \"react-icons/md\";\nimport { getStorage, ref, getDownloadURL, listAll } from 'firebase/storage';\nimport { useState } from 'react';\n\nconst ResumeContainer = styled.div`\n`\n\nconst InfoContainer = styled.div`\n    display:flex;\n    flex-direction: column;\n    margin: auto auto;\n    width: 800px;\n    max-width: 80%;\n\n    h1 {\n        text-transform: uppercase;\n    }\n\n    button {\n        border-radius: 15px;\n        width: 200px;\n        background: #8C2131;\n        white-space: nowrap;\n        margin-right:30px;\n        border: none;\n        padding: 14px 30px;\n        color: #fff;\n        font-size: 20px;\n        outline: none;\n        cursor: pointer;\n        display: flex;\n        text-transform: uppercase;\n        justify-content: center;\n        align-items: center;\n        text-decoration: none;\n        transition: all 0.2s ease-in-out;\n\n        &:hover {\n            transition: all 0.2s ease-in-out;\n            background: #F3CD00;\n            color: #fff}\n        }\n\n`\n\nconst BackButton = styled(LinkR)`\n    display:inline-block;\n    border-radius: 50%;\n    border: 5px solid #8C2131;\n    margin: 30px 0 0 30px;\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n\n    svg {\n        display: flex;\n        margin: 5px auto 0 auto;\n    }\n\n    &:hover {\n        border: 5px solid #F3CD00;\n\n    }\n`\nconst ResumeList = styled.div`\n    a {\n        text-decoration: none;\n    }\n`\n\nconst Data = styled.p`\n    color: black;\n    text-decoration: none;\n\n    &:visited , &:link {\n        text-decoration: none;\n        color: black;\n    }\n\n    &:hover {\n        color: #8C2131;\n    }\n`\n\nconst Resume = () => {\n    // Create Reference for folder that contain all the current resumes\n    const storageRef = ref(storage, `/resume2024`);\n\n    const [data, setData] = useState([]);\n    const [called, setCalled] = useState(\"true\")\n\n    const listItem = () => {\n        // Resets the elements in the \"data\" array, everytime the user clicks \"Get Resume\".\n        data.length = 0;\n\n        // List all the resume files in \"./resume2024\" folder\n        listAll(storageRef)\n            .then((res) => {\n                res.items.forEach((item) => {\n                    // Get download url for each file\n                    getDownloadURL(ref(storage, `${item.fullPath}`))\n                        .then((url) => {\n                            setData(arr => [...arr, { name: item.name, url: url }]);\n                        })\n                })\n            })\n            .catch(err => {\n                alert(err.message);\n            })\n    }\n\n    return (\n        <ResumeContainer>\n            <BackButton to=\"/\">\n                <MdOutlineArrowBackIos size='40' color='#8C2131' />\n            </BackButton>\n            <InfoContainer>\n                <h1>\n                    Click the button to get all the resumes\n                </h1>\n                <ResumeList>\n                    {\n                        data.map((val) => (\n                            <>\n                                <hr></hr>\n                                <a href={val.url} target=\"_blank\">\n                                    <Data>{val.name}</Data>\n                                </a>\n\n                            </>\n                        ))\n                    }\n                    <hr></hr>\n                </ResumeList>\n\n                <button\n                    onClick={listItem}\n                >\n                    Get Resume\n                </button>\n            </InfoContainer>\n        </ResumeContainer>\n    )\n}\n\nexport default Resume\n","/Users/bylsma/calvinhacks-2025/src/pages/index.js",["141"],"import FaqSection from '../components/FaqSection';\nimport HeroSection from '../components/HeroSection';\nimport ScheduleSection from '../components/ScheduleSection';\nimport Navbar from '../components/Navbar'\nimport Sidebar from '../components/Sidebar'\nimport FooterSection from '../components/Footer';\nimport SponsorSection from '../components/SponsorSection';\nimport AboutSection from '../components/AboutSection';\nimport SignupPage from './signup';\n\nimport React, { useState } from 'react';\n\nconst Home = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    // closes sidebar\n    const toggle = () => {\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <>\n            <Sidebar isOpen={isOpen} toggle={toggle} />\n            <Navbar toggle={toggle} />\n            <HeroSection />\n            <AboutSection />\n            <FaqSection />\n            <ScheduleSection />\n            <SponsorSection />\n            <FooterSection />\n        </>\n    );\n}\n\nexport default Home;\n","/Users/bylsma/calvinhacks-2025/src/components/HeroSection/index.js",["142"],"import React from 'react'\nimport {\n    HeroContainer, HeroImageLeft, HeroImageRight, HeroH1, HeroP, HeroButtonContainer,\n    HeroImageContainer, SignupInfo\n} from './HeroElement';\nimport { Button, ButtonSponsor, ButtonGDG} from '../ButtonElement'\nimport left from '../../image/left-01-01.png'\nimport right from '../../image/right-01-01.png'\nimport sponsor from '../../image/SponsorshipDocument2023.pdf'\n\nconst HeroSection = () => {\n\n\n    return (\n        <HeroContainer>\n            <HeroImageContainer>\n                <HeroImageLeft>\n                    <img src={left} alt='plugin' />\n                </HeroImageLeft>\n                <HeroImageRight>\n                    <img src={right} alt='rigth' />\n                </HeroImageRight>\n            </HeroImageContainer>\n\n            <SignupInfo>\n                <HeroH1>\n                    Abstraction Hackathon\n                </HeroH1>\n                <HeroP>\n                    Take a Break and Get Plugged Back in!\n                </HeroP>\n                <HeroButtonContainer>\n                    <Button to='/signup'\n                        primary='true'\n                        big='true'\n                        dark='true'\n                        liner=''\n                    // fontLarge=''\n                    >\n                        Sign Up <br>\n                        </br>as participant\n                    </Button>\n                    <ButtonSponsor\n                        onClick={(e) => {\n                            e.preventDefault();\n                            window.open(sponsor, \"_blank\").focus();\n                            // window.location.href = \"/static/media/SponsorshipDocument.673dc1e7.pdf\";\n                        }}\n                        primary=''\n                        liner='true'\n                        big=\"true\"\n                        dark='true'\n                        // fontLarge=\"\"\n                        color=''\n                    >\n                        Sponsor <br>\n                        </br> Package\n                    </ButtonSponsor>\n                </HeroButtonContainer>\n            </SignupInfo>\n        </HeroContainer>\n    )\n}\n\nexport default HeroSection;\n","/Users/bylsma/calvinhacks-2025/src/components/FaqSection/index.js",[],"/Users/bylsma/calvinhacks-2025/src/components/Footer/index.js",[],"/Users/bylsma/calvinhacks-2025/src/components/SponsorSection/index.js",["143","144","145","146","147"],"import React from 'react';\nimport { SponsorContainer, SponsorImageContainer, SponsorSilver, SponsorBronze, SponsorGold, SponsorLink } from './SponsorElement';\nimport dornerworks from '../../image/dornerworks.png';\nimport spindance from '../../image/spindance.jpg';\nimport atomicobject from '../../image/atomic.png';\nimport tekton from '../../image/tekton.png';\nimport twisthink from '../../image/twisthink.png';\nimport calvin from '../../image/calvin.jpg'\n\nconst SponsorSection = () => {\n    return (\n        <SponsorContainer id='Sponsors'>\n            <h1>Sponsors</h1>\n            <SponsorImageContainer>\n                <SponsorGold>\n                    <SponsorLink href='https://www.tekton.com/'>\n                        <img src={tekton} alt='tekton' />\n                    </SponsorLink>\n                </SponsorGold>\n                <SponsorSilver>\n                    {/* <SponsorLink href='https://dornerworks.com/'>\n                        <img src={dornerworks} alt='dornerworks' /> */}\n                    {/* </SponsorLink> */}\n                </SponsorSilver>\n                <SponsorBronze>\n                    {/*<SponsorLink href='https://spindance.com/'>\n                        <img src={spindance} alt='spindance' />\n    </SponsorLink>*/}\n                    {/* <SponsorLink href='https://twisthink.com/'>\n                        <img src={twisthink} alt='twisthink' />\n                    </SponsorLink> */}\n                    {/*<SponsorLink href='https://calvin.edu/'>\n                        <img src={calvin} alt='calvinuniversity' />\n    </SponsorLink>*/}\n                </SponsorBronze>\n            </SponsorImageContainer>\n        </SponsorContainer>\n    )\n}\n\nexport default SponsorSection\n","/Users/bylsma/calvinhacks-2025/src/components/AboutSection/index.js",[],"/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/index.js",[],"/Users/bylsma/calvinhacks-2025/src/components/Navbar/index.js",["148"],"import React, { useState, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks, NavButton, NavButtonLink, NavItemResume } from './NavbarElement'\nimport { animateScroll as scroll } from 'react-scroll'\nimport logo from '../../image/logo.png'\n\nconst Navbar = ({ toggle }) => {\n    const [ScrollNav, SetScrollNav] = useState(false)\n\n    const changeNav = () => {\n        if (window.scrollY >= 80) {\n            SetScrollNav(true)\n        } else {\n            SetScrollNav(false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', changeNav)\n    }, [])\n\n\n    const toggleHome = () => {\n        scroll.scrollToTop();\n    }\n    return (\n        <>\n            <Nav>\n                <NavbarContainer scrollNav>\n                    <NavLogo to='/'>\n                        <img onClick={toggleHome} src={logo} alt='logo' />\n                        {/* <p>CalvinHacks</p> */}\n                    </NavLogo>\n                    <MobileIcon onClick={toggle}>\n                        <FaBars />\n                    </MobileIcon>\n                    <NavMenu>\n                        <NavItem>\n                            <NavLinks to='about'\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact='true'\n                                offset={-80}\n                            >About</NavLinks>\n                        </NavItem>\n                        <NavItem>\n                            <NavLinks to='faq'\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact='true'\n                                offset={-80}\n                            >FAQ</NavLinks>\n                        </NavItem>\n                        <NavItem>\n                            <NavLinks to='schedule'\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact='true'\n                                offset={-80}\n                            >Schedule</NavLinks>\n                        </NavItem>\n                        <NavItem>\n                            <NavLinks to='Sponsors'\n                                smooth={true}\n                                duration={500}\n                                spy={true}\n                                exact='true'\n                                offset={-80}\n                            >Sponsors</NavLinks>\n                        </NavItem>\n                        <NavItemResume to='/Resume'>\n                            Resume\n                        </NavItemResume>\n                        <NavButton>\n                            <NavButtonLink to='/signin'>\n                                Log in\n                            </NavButtonLink>\n                        </NavButton>\n                    </NavMenu>\n                </NavbarContainer>\n            </Nav>\n        </>\n    )\n}\n\nexport default Navbar\n","/Users/bylsma/calvinhacks-2025/src/components/Sidebar/index.js",[],"/Users/bylsma/calvinhacks-2025/src/components/HeroSection/HeroElement.js",[],"/Users/bylsma/calvinhacks-2025/src/components/ButtonElement.js",[],["149","150"],"/Users/bylsma/calvinhacks-2025/src/components/FaqSection/Data.js",[],"/Users/bylsma/calvinhacks-2025/src/components/Footer/FooterElement.js",[],"/Users/bylsma/calvinhacks-2025/src/components/FaqSection/FaqElement.js",[],"/Users/bylsma/calvinhacks-2025/src/components/SponsorSection/SponsorElement.js",[],"/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/ScheduleElement.js",[],"/Users/bylsma/calvinhacks-2025/src/components/AboutSection/AboutElement.js",[],"/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/secondDayData.js",[],"/Users/bylsma/calvinhacks-2025/src/components/ScheduleSection/firstDayData.js",[],"/Users/bylsma/calvinhacks-2025/src/components/Navbar/NavbarElement.js",[],"/Users/bylsma/calvinhacks-2025/src/components/Sidebar/SidebarElement.js",[],{"ruleId":"151","severity":1,"message":"152","line":4,"column":67,"nodeType":"153","messageId":"154","endLine":4,"endColumn":74},{"ruleId":"151","severity":1,"message":"155","line":113,"column":19,"nodeType":"153","messageId":"154","endLine":113,"endColumn":23},{"ruleId":"151","severity":1,"message":"156","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":15},{"ruleId":"151","severity":1,"message":"157","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":12},{"ruleId":"151","severity":1,"message":"158","line":10,"column":10,"nodeType":"153","messageId":"154","endLine":10,"endColumn":32},{"ruleId":"151","severity":1,"message":"159","line":10,"column":50,"nodeType":"153","messageId":"154","endLine":10,"endColumn":60},{"ruleId":"151","severity":1,"message":"160","line":10,"column":67,"nodeType":"153","messageId":"154","endLine":10,"endColumn":78},{"ruleId":"151","severity":1,"message":"161","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":24},{"ruleId":"151","severity":1,"message":"162","line":11,"column":26,"nodeType":"153","messageId":"154","endLine":11,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":527,"column":90,"nodeType":"165","messageId":"166","endLine":527,"endColumn":167,"fix":"167"},{"ruleId":"163","severity":1,"message":"164","line":543,"column":98,"nodeType":"165","messageId":"166","endLine":543,"endColumn":147,"fix":"168"},{"ruleId":"163","severity":1,"message":"164","line":544,"column":33,"nodeType":"165","messageId":"166","endLine":544,"endColumn":134,"fix":"169"},{"ruleId":"163","severity":1,"message":"164","line":545,"column":70,"nodeType":"165","messageId":"166","endLine":545,"endColumn":119,"fix":"170"},{"ruleId":"151","severity":1,"message":"157","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":12},{"ruleId":"151","severity":1,"message":"171","line":6,"column":33,"nodeType":"153","messageId":"154","endLine":6,"endColumn":55},{"ruleId":"151","severity":1,"message":"159","line":7,"column":10,"nodeType":"153","messageId":"154","endLine":7,"endColumn":20},{"ruleId":"151","severity":1,"message":"172","line":95,"column":12,"nodeType":"153","messageId":"154","endLine":95,"endColumn":18},{"ruleId":"151","severity":1,"message":"173","line":95,"column":20,"nodeType":"153","messageId":"154","endLine":95,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":131,"column":33,"nodeType":"165","messageId":"166","endLine":131,"endColumn":67,"fix":"174"},{"ruleId":"151","severity":1,"message":"175","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":18},{"ruleId":"151","severity":1,"message":"176","line":6,"column":33,"nodeType":"153","messageId":"154","endLine":6,"endColumn":42},{"ruleId":"151","severity":1,"message":"177","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":19},{"ruleId":"151","severity":1,"message":"178","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"179","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":20},{"ruleId":"151","severity":1,"message":"180","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":17},{"ruleId":"151","severity":1,"message":"181","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":14},{"ruleId":"151","severity":1,"message":"182","line":8,"column":12,"nodeType":"153","messageId":"154","endLine":8,"endColumn":21},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},"no-unused-vars","'getAuth' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'picture' is defined but never used.","'db' is defined but never used.","'connectStorageEmulator' is defined but never used.","'getStorage' is defined but never used.","'uploadBytes' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"187","text":"188"},{"range":"189","text":"188"},{"range":"190","text":"188"},{"range":"191","text":"188"},"'MdSettingsInputAntenna' is defined but never used.","'called' is assigned a value but never used.","'setCalled' is assigned a value but never used.",{"range":"192","text":"188"},"'SignupPage' is defined but never used.","'ButtonGDG' is defined but never used.","'dornerworks' is defined but never used.","'spindance' is defined but never used.","'atomicobject' is defined but never used.","'twisthink' is defined but never used.","'calvin' is defined but never used.","'ScrollNav' is assigned a value but never used.","no-native-reassign",["193"],"no-negated-in-lhs",["194"],[15906,15906]," rel=\"noreferrer\"",[16785,16785],[16983,16983],[17114,17114],[3292,3292],"no-global-assign","no-unsafe-negation"]